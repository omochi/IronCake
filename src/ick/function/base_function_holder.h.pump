#pragma once

#include "../base/memory.h"

namespace ick {
	template <typename F> class BaseFunctionHolder;
	$var an_max = 8
	$range an 0..an_max
	$for an [[
	$range ai 1..an

	template <typename R$for ai [[, typename A$ai]]>
	class BaseFunctionHolder<R(*)($for ai , [[A$ai]])> {
	public:
		typedef R (*FunctionType)($for ai , [[A$ai]]);
		typedef BaseFunctionHolder<FunctionType> ThisType;
	private:
		ThisType & operator = (const ThisType & copy);
	public:
		virtual ~BaseFunctionHolder(){};
		virtual ThisType * Clone() const = 0;
		virtual R operator() ($for ai , [[A$ai a$ai]]) = 0;
	};
	]]

}

