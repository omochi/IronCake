// This file was GENERATED by command:
//     pump.py function_bind_decl.h.pump
// DO NOT EDIT BY HAND!!!

#pragma once

namespace ick {

	// 引数0個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数0個の関数にする。
	template <class T, typename R>
	Function<R(*)()>
	FunctionBind(R(T::*method)(), T * instance);


	// 引数1個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数1個の関数にする。
	template <class T, typename R, typename A1>
	Function<R(*)(A1)>
	FunctionBind(R(T::*method)(A1), T * instance);


	// 引数1個の関数に、1個の引数をbindして、
	// 引数0個の関数にする。
	template <typename R, typename A1>
	Function<R(*)()>
	FunctionBind(R(*native_function)(A1), A1 a1);

	template <typename R, typename A1>
	Function<R(*)()>
	FunctionBind(Function<R(*)(A1)> function , A1 a1);


	// 引数1個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数0個の関数にする。
	template <class T, typename R, typename A1>
	Function<R(*)()>
	FunctionBind(R(T::*method)(A1), T * instance, A1 a1);


	// 引数2個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数2個の関数にする。
	template <class T, typename R, typename A1, typename A2>
	Function<R(*)(A1, A2)>
	FunctionBind(R(T::*method)(A1, A2), T * instance);


	// 引数2個の関数に、1個の引数をbindして、
	// 引数1個の関数にする。
	template <typename R, typename A1, typename A2>
	Function<R(*)(A2)>
	FunctionBind(R(*native_function)(A1, A2), A1 a1);

	template <typename R, typename A1, typename A2>
	Function<R(*)(A2)>
	FunctionBind(Function<R(*)(A1, A2)> function , A1 a1);


	// 引数2個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数1個の関数にする。
	template <class T, typename R, typename A1, typename A2>
	Function<R(*)(A2)>
	FunctionBind(R(T::*method)(A1, A2), T * instance, A1 a1);


	// 引数2個の関数に、2個の引数をbindして、
	// 引数0個の関数にする。
	template <typename R, typename A1, typename A2>
	Function<R(*)()>
	FunctionBind(R(*native_function)(A1, A2), A1 a1, A2 a2);

	template <typename R, typename A1, typename A2>
	Function<R(*)()>
	FunctionBind(Function<R(*)(A1, A2)> function , A1 a1, A2 a2);


	// 引数2個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数0個の関数にする。
	template <class T, typename R, typename A1, typename A2>
	Function<R(*)()>
	FunctionBind(R(T::*method)(A1, A2), T * instance, A1 a1, A2 a2);


	// 引数3個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数3個の関数にする。
	template <class T, typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A1, A2, A3)>
	FunctionBind(R(T::*method)(A1, A2, A3), T * instance);


	// 引数3個の関数に、1個の引数をbindして、
	// 引数2個の関数にする。
	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A2, A3)>
	FunctionBind(R(*native_function)(A1, A2, A3), A1 a1);

	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A2, A3)>
	FunctionBind(Function<R(*)(A1, A2, A3)> function , A1 a1);


	// 引数3個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数2個の関数にする。
	template <class T, typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A2, A3)>
	FunctionBind(R(T::*method)(A1, A2, A3), T * instance, A1 a1);


	// 引数3個の関数に、2個の引数をbindして、
	// 引数1個の関数にする。
	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A3)>
	FunctionBind(R(*native_function)(A1, A2, A3), A1 a1, A2 a2);

	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A3)>
	FunctionBind(Function<R(*)(A1, A2, A3)> function , A1 a1, A2 a2);


	// 引数3個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数1個の関数にする。
	template <class T, typename R, typename A1, typename A2, typename A3>
	Function<R(*)(A3)>
	FunctionBind(R(T::*method)(A1, A2, A3), T * instance, A1 a1, A2 a2);


	// 引数3個の関数に、3個の引数をbindして、
	// 引数0個の関数にする。
	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)()>
	FunctionBind(R(*native_function)(A1, A2, A3), A1 a1, A2 a2, A3 a3);

	template <typename R, typename A1, typename A2, typename A3>
	Function<R(*)()>
	FunctionBind(Function<R(*)(A1, A2, A3)> function , A1 a1, A2 a2, A3 a3);


	// 引数3個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数0個の関数にする。
	template <class T, typename R, typename A1, typename A2, typename A3>
	Function<R(*)()>
	FunctionBind(R(T::*method)(A1, A2, A3), T * instance, A1 a1, A2 a2, A3 a3);


	// 引数4個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数4個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4>
	Function<R(*)(A1, A2, A3, A4)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4), T * instance);


	// 引数4個の関数に、1個の引数をbindして、
	// 引数3個の関数にする。
	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A2, A3, A4)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4), A1 a1);

	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A2, A3, A4)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4)> function , A1 a1);


	// 引数4個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数3個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4>
	Function<R(*)(A2, A3, A4)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4), T * instance, A1 a1);


	// 引数4個の関数に、2個の引数をbindして、
	// 引数2個の関数にする。
	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A3, A4)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4), A1 a1, A2 a2);

	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A3, A4)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4)> function , A1 a1, A2 a2);


	// 引数4個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数2個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4>
	Function<R(*)(A3, A4)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4), T * instance, A1 a1, A2 a2);


	// 引数4個の関数に、3個の引数をbindして、
	// 引数1個の関数にする。
	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A4)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4), A1 a1, A2 a2, A3 a3);

	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)(A4)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4)> function , A1 a1, A2 a2, A3 a3);


	// 引数4個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数1個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4>
	Function<R(*)(A4)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4), T * instance, A1 a1, A2 a2, A3 a3);


	// 引数4個の関数に、4個の引数をbindして、
	// 引数0個の関数にする。
	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)()>
	FunctionBind(R(*native_function)(A1, A2, A3, A4), A1 a1, A2 a2, A3 a3, A4 a4);

	template <typename R, typename A1, typename A2, typename A3, typename A4>
	Function<R(*)()>
 FunctionBind(Function<R(*)(A1, A2, A3, A4)> function , A1 a1, A2 a2, A3 a3,
     A4 a4);


	// 引数4個のメソッドに、
	// thisと4個の引数をbindして、
	// 引数0個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4>
	Function<R(*)()>
 FunctionBind(R(T::*method)(A1, A2, A3, A4), T * instance, A1 a1, A2 a2, A3 a3,
     A4 a4);


	// 引数5個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数5個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)(A1, A2, A3, A4, A5)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance);


	// 引数5個の関数に、1個の引数をbindして、
	// 引数4個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A2, A3, A4, A5)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5), A1 a1);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A2, A3, A4, A5)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5)> function , A1 a1);


	// 引数5個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数4個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)(A2, A3, A4, A5)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance, A1 a1);


	// 引数5個の関数に、2個の引数をbindして、
	// 引数3個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A3, A4, A5)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5), A1 a1, A2 a2);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A3, A4, A5)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5)> function , A1 a1, A2 a2);


	// 引数5個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数3個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)(A3, A4, A5)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance, A1 a1, A2 a2);


	// 引数5個の関数に、3個の引数をbindして、
	// 引数2個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A4, A5)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5), A1 a1, A2 a2, A3 a3);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A4, A5)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5)> function , A1 a1, A2 a2,
     A3 a3);


	// 引数5個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数2個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)(A4, A5)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance, A1 a1, A2 a2,
     A3 a3);


	// 引数5個の関数に、4個の引数をbindして、
	// 引数1個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A5)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5), A1 a1, A2 a2, A3 a3,
     A4 a4);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)(A5)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5)> function , A1 a1, A2 a2,
     A3 a3, A4 a4);


	// 引数5個のメソッドに、
	// thisと4個の引数をbindして、
	// 引数1個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)(A5)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance, A1 a1, A2 a2,
     A3 a3, A4 a4);


	// 引数5個の関数に、5個の引数をbindして、
	// 引数0個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)()>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5), A1 a1, A2 a2, A3 a3,
     A4 a4, A5 a5);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5>
	Function<R(*)()>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5)> function , A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5);


	// 引数5個のメソッドに、
	// thisと5個の引数をbindして、
	// 引数0個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5>
	Function<R(*)()>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5), T * instance, A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5);


	// 引数6個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数6個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A1, A2, A3, A4, A5, A6)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance);


	// 引数6個の関数に、1個の引数をbindして、
	// 引数5個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A2, A3, A4, A5, A6)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A2, A3, A4, A5, A6)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1);


	// 引数6個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数5個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A2, A3, A4, A5, A6)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1);


	// 引数6個の関数に、2個の引数をbindして、
	// 引数4個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A3, A4, A5, A6)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1, A2 a2);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A3, A4, A5, A6)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1, A2 a2);


	// 引数6個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数4個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A3, A4, A5, A6)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1,
     A2 a2);


	// 引数6個の関数に、3個の引数をbindして、
	// 引数3個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A4, A5, A6)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1, A2 a2, A3 a3);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A4, A5, A6)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1, A2 a2,
     A3 a3);


	// 引数6個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数3個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A4, A5, A6)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1,
     A2 a2, A3 a3);


	// 引数6個の関数に、4個の引数をbindして、
	// 引数2個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A5, A6)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1, A2 a2, A3 a3,
     A4 a4);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A5, A6)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1, A2 a2,
     A3 a3, A4 a4);


	// 引数6個のメソッドに、
	// thisと4個の引数をbindして、
	// 引数2個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A5, A6)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4);


	// 引数6個の関数に、5個の引数をbindして、
	// 引数1個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A6)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1, A2 a2, A3 a3,
     A4 a4, A5 a5);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)(A6)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5);


	// 引数6個のメソッドに、
	// thisと5個の引数をbindして、
	// 引数1個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)(A6)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5);


	// 引数6個の関数に、6個の引数をbindして、
	// 引数0個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)()>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6), A1 a1, A2 a2, A3 a3,
     A4 a4, A5 a5, A6 a6);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6>
	Function<R(*)()>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6)> function , A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数6個のメソッドに、
	// thisと6個の引数をbindして、
	// 引数0個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6>
	Function<R(*)()>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数7個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数7個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A1, A2, A3, A4, A5, A6, A7)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance);


	// 引数7個の関数に、1個の引数をbindして、
	// 引数6個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A2, A3, A4, A5, A6, A7)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A2, A3, A4, A5, A6, A7)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1);


	// 引数7個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数6個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A2, A3, A4, A5, A6, A7)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1);


	// 引数7個の関数に、2個の引数をbindして、
	// 引数5個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A3, A4, A5, A6, A7)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A3, A4, A5, A6, A7)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2);


	// 引数7個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数5個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A3, A4, A5, A6, A7)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2);


	// 引数7個の関数に、3個の引数をbindして、
	// 引数4個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A4, A5, A6, A7)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2,
     A3 a3);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A4, A5, A6, A7)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2, A3 a3);


	// 引数7個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数4個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A4, A5, A6, A7)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2, A3 a3);


	// 引数7個の関数に、4個の引数をbindして、
	// 引数3個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A5, A6, A7)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2,
     A3 a3, A4 a4);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A5, A6, A7)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2, A3 a3, A4 a4);


	// 引数7個のメソッドに、
	// thisと4個の引数をbindして、
	// 引数3個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A5, A6, A7)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4);


	// 引数7個の関数に、5個の引数をbindして、
	// 引数2個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A6, A7)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A6, A7)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5);


	// 引数7個のメソッドに、
	// thisと5個の引数をbindして、
	// 引数2個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A6, A7)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5);


	// 引数7個の関数に、6個の引数をbindして、
	// 引数1個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A7)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5, A6 a6);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)(A7)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数7個のメソッドに、
	// thisと6個の引数をbindして、
	// 引数1個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)(A7)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数7個の関数に、7個の引数をbindして、
	// 引数0個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)()>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7), A1 a1, A2 a2,
     A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7>
	Function<R(*)()>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);


	// 引数7個のメソッドに、
	// thisと7個の引数をbindして、
	// 引数0個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7>
	Function<R(*)()>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7), T * instance, A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);


	// 引数8個のメソッドに、
	// thisと0個の引数をbindして、
	// 引数8個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)>
	FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance);


	// 引数8個の関数に、1個の引数をbindして、
	// 引数7個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A2, A3, A4, A5, A6, A7, A8)>
	FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A2, A3, A4, A5, A6, A7, A8)>
	FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1);


	// 引数8個のメソッドに、
	// thisと1個の引数をbindして、
	// 引数7個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A2, A3, A4, A5, A6, A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1);


	// 引数8個の関数に、2個の引数をbindして、
	// 引数6個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A3, A4, A5, A6, A7, A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A3, A4, A5, A6, A7, A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2);


	// 引数8個のメソッドに、
	// thisと2個の引数をbindして、
	// 引数6個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A3, A4, A5, A6, A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2);


	// 引数8個の関数に、3個の引数をbindして、
	// 引数5個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A4, A5, A6, A7, A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A4, A5, A6, A7, A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3);


	// 引数8個のメソッドに、
	// thisと3個の引数をbindして、
	// 引数5個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A4, A5, A6, A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3);


	// 引数8個の関数に、4個の引数をbindして、
	// 引数4個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A5, A6, A7, A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3, A4 a4);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A5, A6, A7, A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3, A4 a4);


	// 引数8個のメソッドに、
	// thisと4個の引数をbindして、
	// 引数4個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A5, A6, A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3, A4 a4);


	// 引数8個の関数に、5個の引数をbindして、
	// 引数3個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A6, A7, A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A6, A7, A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5);


	// 引数8個のメソッドに、
	// thisと5個の引数をbindして、
	// 引数3個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A6, A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3, A4 a4, A5 a5);


	// 引数8個の関数に、6個の引数をbindして、
	// 引数2個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A7, A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A7, A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数8個のメソッドに、
	// thisと6個の引数をbindして、
	// 引数2個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A7, A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);


	// 引数8個の関数に、7個の引数をbindして、
	// 引数1個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A8)>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A8)>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);


	// 引数8個のメソッドに、
	// thisと7個の引数をbindして、
	// 引数1個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)(A8)>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);


	// 引数8個の関数に、8個の引数をbindして、
	// 引数0個の関数にする。
 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)()>
 FunctionBind(R(*native_function)(A1, A2, A3, A4, A5, A6, A7, A8), A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8);

 template <typename R, typename A1, typename A2, typename A3, typename A4,
     typename A5, typename A6, typename A7, typename A8>
	Function<R(*)()>
 FunctionBind(Function<R(*)(A1, A2, A3, A4, A5, A6, A7, A8)> function , A1 a1,
     A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8);


	// 引数8個のメソッドに、
	// thisと8個の引数をbindして、
	// 引数0個の関数にする。
 template <class T, typename R, typename A1, typename A2, typename A3,
     typename A4, typename A5, typename A6, typename A7, typename A8>
	Function<R(*)()>
 FunctionBind(R(T::*method)(A1, A2, A3, A4, A5, A6, A7, A8), T * instance,
     A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8);


}
